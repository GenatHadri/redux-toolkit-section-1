{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    // Each reducer will have his own unique identifier as a type\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter++;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst store = configureStore({\n  reducer: counterSlice.reducer // This is the usage when we have one reducer\n  // reducer: { counter: counterSlice.reducer }, // This is the usage when we have multiple reducers, in the background the configureStore will merge all those reducers into one big reducer\n});\n\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter","initialAuthState","isAuthenticated","store","reducer","counterActions","actions"],"sources":["/Users/genathadri/Udemy/redux-toolkit-with-react-section-1/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nconst initialCounterState = { counter: 0, showCounter: true };\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    // Each reducer will have his own unique identifier as a type\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter++;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\n\nconst initialAuthState = { isAuthenticated: false };\n\nconst store = configureStore({\n  reducer: counterSlice.reducer, // This is the usage when we have one reducer\n  // reducer: { counter: counterSlice.reducer }, // This is the usage when we have multiple reducers, in the background the configureStore will merge all those reducers into one big reducer\n});\n\nexport const counterActions = counterSlice.actions;\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,mBAAmB,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAE7D,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEL,mBAAmB;EACjCM,QAAQ,EAAE;IACR;IACAC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACP,OAAO,EAAE;IACjB,CAAC;IACDQ,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACP,OAAO,EAAE;IACjB,CAAC;IACDS,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACtBH,KAAK,CAACP,OAAO,GAAGO,KAAK,CAACP,OAAO,GAAGU,MAAM,CAACC,OAAO;IAChD,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACnBA,KAAK,CAACN,WAAW,GAAG,CAACM,KAAK,CAACN,WAAW;IACxC;EACF;AACF,CAAC,CAAC;AAEF,MAAMY,gBAAgB,GAAG;EAAEC,eAAe,EAAE;AAAM,CAAC;AAEnD,MAAMC,KAAK,GAAGjB,cAAc,CAAC;EAC3BkB,OAAO,EAAEd,YAAY,CAACc,OAAO,CAAE;EAC/B;AACF,CAAC,CAAC;;AAEF,OAAO,MAAMC,cAAc,GAAGf,YAAY,CAACgB,OAAO;AAElD,eAAeH,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}